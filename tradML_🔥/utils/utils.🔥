
from collections import List, Dict
from tensor import Tensor
from math import sqrt, log, exp

""" 
Constants
"""
let project_name = "tradML_mojo_"


"""
Helper utilities for the Mojo Raw poring
"""
fn euclidean_distance(a: Tensor[DType.float32], b: Tensor[DType.float32]) -> Float32:
    return sqrt(((a - b) ** 2).sum())

fn normalize(data: Tensor[DType.float32]) -> Tensor[DType.float32]:
    let min_vals = data.min(dim=0)
    let max_vals = data.max(dim=0)
    return (data - min_vals) / (max_vals - min_vals)

export euclidean_distance, normalize, project_name


"""
SIMD and other optimizations
"""